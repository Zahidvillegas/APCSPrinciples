def Game():
  #turns system switches from x to o
    global turns
    turns = 0
  #lists for the moves that have already been used
    moves = []
    xmoves = []
    omoves = []
    c = []
    #winning combos possiblities
    w1 = [1,2,3]
    w2 = [4,5,6]
    w3 = [7,8,9]
    w4 = [1,4,7]
    w5 = [2,5,8]
    w6 = [3,6,9]
    w7 = [1,5,9]
    w8 = [3,5,7]
    import turtle
    # defining the window
    window = turtle.Screen()
    window.bgcolor("green")
    window.title("Tic Tac Toe")

    # defining the turtle determines the turtle shape/size/color
    t = turtle.Turtle()
    t.color("black")
    t.pensize(8)
    t.shape("turtle")
    t.shapesize(1)
    t.speed(8)
    t.hideturtle()

     #creates ttt board
    def board() :
        t.pu()
        t.goto(-300,-100)
        t.pd()
        t.forward(600)
        t.pu()
        t.goto(-300,100)
        t.pd()
        t.forward(600)
        t.pu()
        t.goto(-100,250)
        t.pd()
        t.right(90)
        t.fd(500)
        t.pu()
        t.goto(100,250)
        t.pd()
        t.fd(500)
        t.pu()
    board()

    #once the game is won, it tells the user that they won
    def writexwin():
        t.goto(-200, 250)
        t.write("X Wins!", font=("arial", 50))
    def writeowin():
        t.goto(-200,250)
        t.write("O Wins!", font=("arial", 50))

    #this function will restart the game or not if the player wants
    def restart():
        restartgame = window.textinput("restart box","play again?")
        if restartgame.lower() == "yes":
            t.clear()
            Game()
        else:
            t.clear()
            t.goto(-375,-50)
            t.write("GAME OVER",font=("arial",120))


    # when 3 x's are in a row
    def xwins():
        if len(c) != 9:
            if all(each in xmoves for each in w1):
               writexwin()
               restart()
            elif all(each in xmoves for each in w2):
                writexwin()
                restart()
            elif all(each in xmoves for each in w3):
                writexwin()
                restart()
            elif all(each in xmoves for each in w4):
                writexwin()
                restart()
            elif all(each in xmoves for each in w5):
                writexwin()
                restart()
            elif all(each in xmoves for each in w6):
                writexwin()
                restart()
            elif all(each in xmoves for each in w7):
                writexwin()
                restart()
            elif all(each in xmoves for each in w8):
                writexwin()
                restart()
        elif len(c) == 9 and (not all(each in xmoves for each in w1) or not all(each in xmoves for each in w2) or not all(each in xmoves for each in w3) or not all(each in xmoves for each in w4) or not all(each in xmoves for each in w5) or not all(each in xmoves for each in w6) or not all(each in xmoves for each in w7) or not all(each in xmoves for each in w8))
# 3 o's in a row
    def owins():
        if all(each in omoves for each in w1):
            writeowin()
            restart()
        elif all(each in omoves for each in w2):
            writeowin()
            restart()
        elif all(each in omoves for each in w3):
            writeowin()
            restart()
        elif all(each in omoves for each in w4):
            writeowin()
            restart()
        elif all(each in omoves for each in w5):
            writeowin()
            restart()
        elif all(each in omoves for each in w6):
            writeowin()
            restart()
        elif all(each in omoves for each in w7):
            writeowin()
            restart()
        elif all(each in omoves for each in w8):
            writeowin()
            restart()

#writing the x and o on the board
    def drawx():#draws the x
        t.write("x", font=("times new roman", 200))

    def drawo():#draws the o
        t.write("o", font=("times new roman", 200))

    place = []
#all of the locations on the board
    def locationx(x,y) : #makes board clickable for the x's
        if x > 100 and x < 300 and y > 100 and y < 250:#top right
            t.pu()
            if 1 not in place :
                t.goto(150,100)
                drawx()
                place.append (1)
                xmoves.append (1)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -100 and x < 100 and y > 100 and y < 250:#top mid
            t.pu()
            if 2 not in place :
                t.goto(-50, 100)
                drawx()
                place.append (2)
                xmoves.append(2)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -300 and x < -100 and y > 100 and y < 250: #top left
            t.pu()
            if 3 not in place :
                t.goto(-250, 100)
                drawx()
                place.append (3)
                xmoves.append(3)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > 100 and x < 300 and y > -100 and y < 100: #midright
            t.pu()
            if 4 not in place :
                t.goto(150, -100)
                drawx()
                place.append (4)
                xmoves.append(4)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -100 and x < 100 and y > -100 and y < 100: #midmid
            t.pu()
            if 5 not in place :
                t.goto(-50, -100)
                drawx()
                place.append (5)
                xmoves.append(5)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -300 and x < -100 and y > -100 and y < 100: #midleft
            t.pu()
            if 6 not in place:
                t.goto(-250, -100)
                drawx()
                place.append (6)
                xmoves.append(6)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > 100 and x < 300 and y > -250 and y < -100: #bot right
            t.pu()
            if 7 not in place:
                t.goto(150, -300)
                drawx()
                place.append (7)
                xmoves.append(7)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -100 and x < 100 and y > -250 and y < -100: #bot mid
            t.pu()
            if 8 not in place:
                t.goto(-50, -300)
                drawx()
                place.append (8)
                xmoves.append(8)
                c.append()
                xwins()
            else:
                locationx(x,y)
        elif x > -300 and x < -100 and y > -250 and y < -100: #bot left
            t.pu()
            if 9 not in place :
                t.goto(-250, -300)
                drawx()
                place.append (9)
                c.append()
                xwins()
            else:
                locationx(x,y)

    def locationo(x,y) : #makes board clickable for the o's
        if x > 100 and x < 300 and y > 100 and y < 250:#top right
            t.pu()
            if 1 not in place :
                t.goto(150,100)
                drawo()
                place.append (1)
                omoves.append(1)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -100 and x < 100 and y > 100 and y < 250:#top mid
            t.pu()
            if 2 not in place:
                t.goto(-50, 100)
                drawo()
                place.append (2)
                omoves.append(2)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -300 and x < -100 and y > 100 and y < 250: #top left
            t.pu()
            if 3 not in place:
                t.goto(-250, 100)
                drawo()
                place.append (3)
                omoves.append(3)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > 100 and x < 300 and y > -100 and y < 100: #midright
            t.pu()
            if 4 not in place:
                t.goto(150, -100)
                drawo()
                place.append (4)
                omoves.append(4)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -100 and x < 100 and y > -100 and y < 100: #midmid
            t.pu()
            if 5 not in place:
                t.goto(-50, -100)
                drawo()
                place.append (5)
                omoves.append(5)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -300 and x < -100 and y > -100 and y < 100: #midleft
            t.pu()
            if 6 not in place:
                t.goto(-250, -100)
                drawo()
                place.append (6)
                omoves.append(6)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > 100 and x < 300 and y > -250 and y < -100: #bot right
            t.pu()
            if 7 not in place:
                t.goto(150, -300)
                drawo()
                place.append (7)
                omoves.append(7)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -100 and x < 100 and y > -250 and y < -100: #bot mid
            t.pu()
            if 8 not in place:
                t.goto(-50, -300)
                drawo()
                place.append (8)
                omoves.append(8)
                c.append()
                owins()
            else:
                locationo(x,y)
        elif x > -300 and x < -100 and y > -250 and y < -100: #bot left
            t.pu()
            if 9 not in place:
                t.goto(-250, -300)
                drawo()
                place.append (9)
                omoves.append(9)
                c.append()
                owins()
            else:
                locationo(x,y)

    moves = []
    def playing (x,y) : #switches x and o for each turn
        global turns
        if len(moves) < 9:
            if turns == 1 :
                locationo(x,y)
                turns=0
                moves.append(turns)
            elif turns == 0:
                locationx(x,y)
                turns=1
                moves.append(turns)



    window.onscreenclick(playing)

    window.mainloop()
Game()
